swagger: '2.0'
info:
  description: This is a BotX API
  version: 1.0.0
  title: BotX.pro | API Documentation
  # put the contact info for your development or API team
  contact:
    email: dev@botx.pro

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

  # x-logo:
  #   url: logo.png
  #   backgroundColor: "#263238"

# tags are used for organizing operations
tags:
- name: market
  description: Market project types
- name: individual
  description: Virtual steam bot

paths:
  /individual/tradeoffers:
    get:
      tags:
        - individual
      summary: list of all tradeoffers
      operationId: getTradeoffers
      description: |
        Get all project tradeoffers
      parameters:
      - in: query
        name: project_id
        description: project id
        required: true
        type: integer
      - in: query
        name: api_key
        description: api key
        required: true
        type: string
      responses:
        200:
          description: success response
          schema:
            $ref: '#/definitions/TradeOfferToSend'
          #   meta:
          #     type: object
          #   tradeoffers: 
          #     type: array
        400:
          description: bad input parameter

    post:
      tags:
        - individual
      summary: send tradeoffer
      operationId: sendTradeoffer
      description: |
        Send TradeOffer
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TradeOfferToSend'
      responses:
        200:
          description: success response
          schema:
            $ref: '#/definitions/Transaction'
        400:
          description: bad input parameter

  /inventory:
    get:
      tags:
      - market
      summary: searches inventory
      operationId: searchInventory
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      produces:
      - application/json
      parameters:
      - in: query
        name: searchString
        description: pass an optional search string for looking up inventory
        required: false
        type: string
      - in: query
        name: skip
        description: number of records to skip for pagination
        type: integer
        format: int32
        minimum: 0
      - in: query
        name: limit
        description: maximum number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 50
      responses:
        200:
          description: search results matching criteria
        #   schema:
        #     meta:
        #       type: object
              
        #     type: array
        400:
          description: bad input parameter
    post:
      tags:
      - individual
      summary: adds an inventory item
      operationId: addInventory
      description: Adds an item to the system
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inventoryItem
        description: Inventory item to add
        schema:
          $ref: '#/definitions/InventoryItem'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
definitions:
  TradeOfferToSend: 
    type: object
    required: 
    - uid
    - token
    - message
    properties:
      uid: 
        type: string
        example: "76561118123456789"  
      token: 
        type: string
        example: "bT7eJeTC"
      message: 
        type: string
        example: "hello, my dear friend!"
      their_items:
        type: array
        items: 
          $ref: '#/definitions/SteamifiedItem'
      my_items:
        type: array
        items: 
          $ref: '#/definitions/SteamifiedItem'
  Transaction:
    type: object
    properties:
      id:
        type: integer
        example: 12
      state:
        type: string
        example: "pending"
        description: also can be "completed" or "failed"
      amount: 
        type: string
        example: "5.35"
        description: based on our items' prices
      steam_amount: 
        type: string
        example: "6.35"
        description: based on steam items' prices
      fee_percent:
        type: integer
        example: 0
      fee_amount:
        type: string
        example: "0.00"
      description: 
        type: string
        example: "transaction description here"
      type:
        type: string
        example: "send_offer" 
      details: 
        type: object
        properties:
          items_to_receive:
            type: array
            items: 
              $ref: '#/definitions/SteamifiedItem'
          items_to_give:
            type: array
            items:
              $ref: '#/definitions/SteamifiedItem'
        description: (optional)
  SteamifiedItem:
    type: object
    required: 
    - assetid
    - contexid
    - appid
    properties:
      assetid:
        type: string
        example: "11123456789"
      contexid:
        type: integer
        example: 2
      appid:
        type: integer
        example: 730
  InventoryItem:
    type: object
    required:
    - id
    - name
    - releaseDate
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      name:
        type: string
        example: Widget Adapter
      releaseDate:
        type: string
        format: int32
        example: 2016-08-29T09:12:33.001Z
# Added by API Auto Mocking Plugin
host: api.botx.pro
basePath: /v1/remote
schemes:
 - https
 # - http